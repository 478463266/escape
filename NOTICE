ESCAPEv2: Extensible Service ChAin Prototyping Environment
          using Mininet, Click, NETCONF and POX

Contributors include:

The core ESCAPE development team:

    * Janos Czentye <janos.czentye@tmit.bme.hu>
    * Balazs Nemeth <balazs.nemeth@tmit.bme.hu>
    * Balazs Sonkoly <balazs.sonkoly@tmit.bme.hu>

The Mininet based infrastructure layer comes from the first version of
ESCAPE. The team members were:

    * Attila Csoma
    * Levente Csikor
    * Felician Nemeth
    * Andras Gulyas
    * Balazs Sonkoly

Additional contributors who submitted features, bugfixes and advices
(in alphabetical order):

    * Lajos Gerecs
    * David Jocha
    * Raphael Vicente Rosa
    * Matthias Rost
    * Sahel Sahhaf
    * Robert Szabo
    * Gabor Vaszkun

ESCAPE uses several submodules, open source frameworks, libraries and
tools which are under different software licenses. These dependencies
are the following:

* mapping (our embedding engine)    Apache 2.0 license
* nffg (ESCAPE's internal NF-FG)    Apache 2.0 license
* unify_virtualizer (Virtualizer)   Apache 2.0 License
* Mininet                           Mininet 2.1.0+ License
* POX                               Apache 2.0 license
* OpenYuma                          BSD license

The codes are used without modification except from Mininet and POX tools:

ESCAPE uses the Mininet framework to emulate an SDN-based domain for its
Infrastructure layer. The code contains additional type of changes and extensions
for the most parts, namely the Execution Environment node and the VNF Catalogue
components. These additions enable ESCAPE to emulate a topology on a single
laptop and run Click-based VNFs on these EE nodes.

ESCAPE sits on top of POX as its layers are defined as POX modules.
ESCAPE exploits POX's cooperative task environment to leverage serialized,
lock-free task execution. Also with cooperation of Mininet-based Infrastructure
ESCAPE plays the role of the SDN (OpenFlow) controller and manages the flowrules
internally to steer Service Function Chains.
Due to the module-based implementation, ESCAPE's source code is well separated
from POX.
However, there are some minimal refinements in POX mainly addressing print
statements and logs entries to avoid ambiguity on the console.
Followed the Apache license restrictions, every change is marked in place.


Many thanks to the developers of these projects and last but not least to
everyone who supported us and helped moving the ESCAPE project forward!
